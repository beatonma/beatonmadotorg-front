@use "../../layout";
@use "../../theme";
@use "../scaffold";
@use "../image";
// @use "./feed-item";

$list-item-max-width: 645px;
$list-gap: 20px;

$list-single-column-width: 1000px;
$list-two-column-width: calc(($list-item-max-width * 2) + $list-gap);
$list-three-column-width: calc(($list-item-max-width * 3) + ($list-gap * 2));

$feed-card-height: 9rem;

%feed-item {
    width: 100%;
    overflow: hidden;
}

%feed-item-list-container {
    /** Used for Github and Notes content.
     * At time of writinng there are only two of these containers.
     * Other feed items may split across up to 3 columns.
     */
}

.feed {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: $list-gap;
    justify-content: flex-start;
    margin: auto;
    max-width: $list-single-column-width;
    margin-bottom: $list-gap;
}

@include theme.display-min-width(
    calc($list-two-column-width + scaffold.$content-margins-horizontal-total)
) {
    .feed {
        max-width: $list-two-column-width;
    }

    %feed-item {
        max-width: $list-item-max-width;
    }
}

@include theme.display-min-width(
    calc($list-three-column-width + scaffold.$content-margins-horizontal-total)
) {
    .feed {
        max-width: $list-three-column-width;
    }
}

/**
 * Calculate the height of $n-rows rows of %feed-item-card.
 */
@function heightOfFeedRows($n-rows) {
    $result: calc(($feed-card-height * $n-rows) + ($list-gap * ($n-rows - 1)));
    @debug "#{$n-rows} -> #{$result}";
    @return calc(($feed-card-height * $n-rows) + ($list-gap * ($n-rows - 1)));
}

$feed-card-height: 9rem;

.feed-item {
    @extend %feed-item;
}

.feed-item-card {
    @extend %elevated;
    @extend %feed-item-card;

    background-color: var(--surface);
}

%feed-item-card[data-type="changelog"],
%feed-item-card[data-type="app"] {
    .image {
        background-size: contain;
    }
}

%feed-item-card {
    @extend %feed-item;
    @extend %shape-medium;
    @extend %animate-all;

    @include layout.row($wrap: nowrap);
    @include layout.height($feed-card-height);

    > .image {
        @include layout.size($feed-card-height);
        @include image.background(cover);
        overflow: hidden;

        > .text-as-image {
            // No actual image available, use some artsy text.
            @include layout.size($feed-card-height * 2);
            position: relative;
            top: -50%;
            left: -50%;
            letter-spacing: 1.2px;
            font-family: monospace;
            letter-spacing: 2px;
            font-size: xx-large;
            font-size: calc($feed-card-height / 5);
            font-weight: bold;
            text-align: center;
            text-transform: uppercase;
            transform: rotate(45deg);
            transform-origin: center;
        }

        > svg {
            margin: 16px;
            width: -webkit-fill-available;
            height: -webkit-fill-available;
        }
    }

    > .text {
        @extend %margin-medium;
        height: -webkit-fill-available;
        width: -webkit-fill-available;

        > .row {
            justify-content: space-between;
            align-items: baseline;
            flex-wrap: wrap;
            column-gap: 1rem;

            > .title {
                @include layout.clipped-text(1);
            }
        }

        > .description {
            @include layout.clipped-text(2);
        }
    }

    @include theme.display-width("small") {
        // Display as a card, image above text.
        flex-wrap: wrap;
        min-height: unset;
        max-height: unset;
        height: auto;
        border-radius: 0;

        > .image {
            width: 100%;
            max-width: 100%;
            max-height: unset;
            height: auto;
            aspect-ratio: 4/3;

            > .text-as-image {
                // No actual image available, use some artsy text.
                @include layout.size(200%);
                font-size: 10vw;
            }
        }

        > .text {
            height: auto;
        }
    }
}
